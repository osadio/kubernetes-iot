apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Kafka.AppName }}-connect-config
  namespace: {{ .Namespace }}
data:
  create-connect-topics.sh: |-
    #!/bin/bash
    if [ -z $KAFKA_APP_NAME ]; then
        KAFKA_APP_NAME="{{ .Kafka.AppName }}"
    fi
    if [ -z $KAFKA_BROKER_SERVICE ]; then
        KAFKA_BROKER_SERVICE="{{ .Kafka.AppName }}-broker"
    fi
    if [ -z $KAFKA_BROKER_PORT ]; then
        KAFKA_BROKER_PORT="9092"
    fi
    if [ -z $KAFKA_BROKER_REPLICAS ]; then
        KAFKA_BROKER_REPLICAS="{{ .Kafka.Replicas }}"
    fi
    if [ -z $ZOOKEEPER_SERVER ]; then
        ZOOKEEPER_SERVER="{{ .Zookeeper.AppName }}-server:2181/{{ .Kafka.Zkchroot }}"
    fi
    if [ -z $NAMESPACE ]; then
        NAMESPACE="{{ .Namespace }}"
    fi
    all_ready=1
    while :
    do
        all_ready=1
        for pod in $(seq 0 $((KAFKA_BROKER_REPLICAS-1)))
        do
            nc -z $KAFKA_APP_NAME-$pod.$KAFKA_BROKER_SERVICE.$NAMESPACE $KAFKA_BROKER_PORT
            if [ $? != 0 ]; then
                all_ready=0
                break
            fi
        done
        if [ $all_ready = 1 ]; then
            break
        else
            echo "Waiting for all pods of kafka application to be ready..."
            sleep 5s
        fi
    done
    echo "Create topics for kafka connect with replication factor $KAFKA_BROKER_REPLICAS..."
    kafka-topics --create --topic kafka-connect-config --partitions 1 --replication-factor $KAFKA_BROKER_REPLICAS --if-not-exists --zookeeper $ZOOKEEPER_SERVER && \
    kafka-topics --create --topic kafka-connect-offset --partitions $((KAFKA_BROKER_REPLICAS*3)) --replication-factor $KAFKA_BROKER_REPLICAS --if-not-exists --zookeeper $ZOOKEEPER_SERVER && \
    kafka-topics --create --topic kafka-connect-status --partitions $((KAFKA_BROKER_REPLICAS*3)) --replication-factor $KAFKA_BROKER_REPLICAS --if-not-exists --zookeeper $ZOOKEEPER_SERVER
    if [ $? != 0 ]; then
        exit 1
    fi
  start-connect.sh: |-
    #!/bin/bash
    export CONNECT_REST_ADVERTISED_HOST_NAME=$(hostname -i)
    echo "rest.advertised.host.name=$CONNECT_REST_ADVERTISED_HOST_NAME"
    . /etc/confluent/docker/run
