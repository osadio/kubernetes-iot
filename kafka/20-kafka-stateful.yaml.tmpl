apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Kafka.AppName }}
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Kafka.AppName }}
  serviceName: {{ .Kafka.AppName }}-broker
  replicas: {{ .Kafka.Replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ .Kafka.AppName }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: kafka-broker
        image: {{ .Kafka.Image }}
        env:
        # Belows are used to make zookeeper.connect configuration
        - name: ZK_PREFIX 
          value: {{ .Zookeeper.AppName }}
        - name: ZK_CLUSTER
          value: {{ .Zookeeper.AppName }}-ensemble
        - name: ZK_CHROOT
          value: {{ .Kafka.Zkchroot }}
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        {{ if eq 1 .Kafka.Replicas }}# Below is required when replicas = 1
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: 1{{ end }}
        ports:
        - name: client
          containerPort: 9092
        lifecycle:
          preStop:
            exec:
             command: ["sh", "-ce", "kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done"]
        resources:
          requests:
            cpu: {{ .Kafka.Resources.CPU }}
            memory: {{ .Kafka.Resources.Memory }}
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 2
          initialDelaySeconds: 5
          periodSeconds: 20
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .LabelConfig.Service }}
                operator: Exists
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Namespace }}-storage
      resources:
        requests:
          storage: {{ .Kafka.Resources.Storage }}
