apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-start
  namespace: titangrm-iot
data:
  start-connect.sh: |-
    #!/bin/bash
    export CONNECT_REST_ADVERTISED_HOST_NAME=$(hostname -i)
    echo "rest.advertised.host.name=$CONNECT_REST_ADVERTISED_HOST_NAME"
    . /etc/confluent/docker/run
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-server
  namespace: titangrm-iot
spec:
  ports:
  - port: 8083
  selector:
    app: kafka-connect
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: titangrm-iot
spec:
  selector:
    matchLabels:
      app: kafka-connect
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      volumes:
      - name: configmap
        configMap:
          name: kafka-connect-start
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: grm.titan.com/service.iot
                operator: Exists
      containers:
      - name: kafka-connect
        image: titangrm/kafka-connect:2.1.0
        env:
        - name: CONNECT_BOOTSTRAP_SERVERS 
          value: "kafka-server:9092" # service name for kafka client
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_GROUP_ID
          value: "kafka-connect-group"
        - name: CONNECT_CONFIG_STORAGE_TOPIC # all topics are created before using Job
          value: "kafka-connect-config"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: "kafka-connect-offset"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: "kafka-connect-status"
        - name: CONNECT_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_PLUGIN_PATH
          value: "/usr/share/java"
        command: ['/bin/bash', '/kafka-connect/start-connect.sh']
        volumeMounts:
        - name: configmap
          mountPath: /kafka-connect
        ports:
        - name: rest
          containerPort: 8083
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-ce", "kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done"]
        resources:
          requests:
            cpu: 2048m
            memory: 2Gi
        readinessProbe:
          tcpSocket:
            port: 8083
          timeoutSeconds: 2
          initialDelaySeconds: 5
          periodSeconds: 20
