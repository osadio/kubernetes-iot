apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Elasticsearch.AppName }}
  namespace: {{ .Namespace }}
  labels:
    app: {{ .Elasticsearch.AppName }}
spec:
  selector:
    matchLabels:
      app: {{ .Elasticsearch.AppName }}
  serviceName: {{ .Elasticsearch.AppName }}-cluster
  replicas: {{ .Elasticsearch.Replicas }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Elasticsearch.AppName }}
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: init-sysctl
        image: {{ .Elasticsearch.InitImage }}
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
      - name: elasticsearch
        resources:
          requests:
            cpu: {{ .Elasticsearch.Resources.CPU }}
            memory: {{ .Elasticsearch.Resources.Memory }}
        securityContext:
          privileged: true
          runAsUser: 1000
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        image: {{ .Elasticsearch.Image }}
        env:
        - name: ES_JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: {{ .Elasticsearch.AppName }}-config
              key: ES_JAVA_OPTS
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        ports:
        - containerPort: 9200
          name: rest
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .LabelConfig.Service }}
                operator: Exists
      volumes:
      - name: config
        configMap:
          name: {{ .Elasticsearch.AppName }}-config
          items:
          - key: elasticsearch.yml
            path: elasticsearch.yml
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Namespace }}-storage
      resources:
        requests:
          storage: {{ .Elasticsearch.Resources.Storage }}
