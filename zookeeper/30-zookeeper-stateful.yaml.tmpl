apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Zookeeper.AppName }}
  namespace: {{ .Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Zookeeper.AppName }}
  serviceName: {{ .Zookeeper.AppName }}-ensemble
  replicas: {{ .Zookeeper.Indices | len }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ .Zookeeper.AppName }}
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: zookeeper-init
        image: {{ .Zookeeper.InitImage }}
        command: ['/bin/bash', '/etc/zookeeper-config/init-zookeeper.sh']
        volumeMounts:
        - name: configmap
          mountPath: /etc/zookeeper-config
        - name: config
          mountPath: /conf
        - name: data
          mountPath: /zookeeper
      containers:
      - name: zookeeper
        image: {{ .Zookeeper.Image }}
        env:
        - name: ZOO_LOG4J_OPTS
          value: -Dlog4j.configuration=file:/conf/log4j.properties
        lifecycle:
          preStop:
            exec:
             command: ["sh", "-ce", "kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done"]
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: follower
        - containerPort: 3888
          name: election
        resources:
          requests:
            cpu: {{ .Zookeeper.Resources.CPU }}
            memory: {{ .Zookeeper.Resources.Memory }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - '[ "imok" = "$(echo ruok | nc -w 1 127.0.0.1 2181)" ]'
          initialDelaySeconds: 5
          periodSeconds: 20
        volumeMounts:
        - name: config
          mountPath: /conf
        - name: data
          mountPath: /zookeeper
      volumes:
      - name: configmap
        configMap:
          name: zookeeper-config
      - name: config
        emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .LabelConfig.Service }}
                operator: Exists
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Namespace }}-storage
      resources:
        requests:
          storage: {{ .Zookeeper.Resources.Storage }}
